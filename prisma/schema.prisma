generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  password     String
  reservations Reservation[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Location {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  rooms     Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id           Int                   @id @default(autoincrement())
  name         String                @unique
  description  String?
  openFrom     Float
  openTo       Float
  locationId   Int
  location     Location              @relation(fields: [locationId], references: [id])
  pictures     RoomPicture[]
  parameters   RoomToRoomParameter[]
  reservations Reservation[]
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
}

model RoomPicture {
  id        Int      @id @default(autoincrement())
  url       String
  main      Boolean
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoomParameter {
  id        Int                   @id @default(autoincrement())
  name      String                @unique
  room      RoomToRoomParameter[]
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
}

model RoomToRoomParameter {
  roomId      Int
  room        Room          @relation(fields: [roomId], references: [id])
  parameterId Int
  parameter   RoomParameter @relation(fields: [parameterId], references: [id])
  value       String

  @@id([roomId, parameterId])
}

model Reservation {
  id          Int                 @id @default(autoincrement())
  description String
  startDate   DateTime
  endDate     DateTime
  categoryId  Int
  category    ReservationCategory @relation(fields: [categoryId], references: [id])
  userId      Int
  user        User                @relation(fields: [userId], references: [id])
  roomId      Int
  room        Room                @relation(fields: [roomId], references: [id])
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  @@index([startDate, endDate])
}

model ReservationCategory {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  reservation Reservation[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}
